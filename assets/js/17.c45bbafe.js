(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{456:function(t,e,a){"use strict";a.r(e);var s=a(43),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("I have a proxy server that works well, but recently I was quite suffering from the bad networking (very high latency and packet loss) accessing my server.")]),t._v(" "),a("p",[t._v("I have managed to setup another closeby server to do a NAT transfer, which (at least partially) solved the issue.")]),t._v(" "),a("h2",{attrs:{id:"nat-through-iptables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nat-through-iptables"}},[t._v("#")]),t._v(" NAT through iptables")]),t._v(" "),a("p",[a("code",[t._v("iptables")]),t._v(" is quite handy to use to setup a NAT.\nSet up a TCP NAT only takes two rules, while a UDP one may be more complex.\nHere is a TCP example:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -t nat -A PREROUTING -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -j DNAT --to-destination "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_IP")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -t nat -A POSTROUTING -p tcp -d "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_IP")]),t._v(" --dport "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -j SNAT --to-source "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCAL_PRIVATE_IP")]),t._v("\n")])])]),a("p",[t._v("Note that:")]),t._v(" "),a("ol",[a("li",[t._v("These two rules do not change the "),a("code",[t._v("dst port")]),t._v(", make sure to set the listening port of the NAT server the same as the destination server.")]),t._v(" "),a("li",[t._v("when tampering the source IP of the packets, make it the NAT server's private IP instead of the public. It could be very likely that your rented NAT server is also running behind another NAT.")])]),t._v(" "),a("h2",{attrs:{id:"verify-nat-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-nat-works"}},[t._v("#")]),t._v(" Verify NAT works")]),t._v(" "),a("p",[t._v("Running "),a("code",[t._v("tcptrack")]),t._v(" on your NAT server to check the traffic")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" tcptrack -i eth0\n")])])]),a("p",[t._v("If the setting is good, you will see two ESTABLISHED connections for every incoming TCP connection (exactly a NAT will do).")]),t._v(" "),a("h2",{attrs:{id:"add-firewall-rule-to-allow-only-specific-ips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-firewall-rule-to-allow-only-specific-ips"}},[t._v("#")]),t._v(" Add firewall rule to allow only specific IPs")]),t._v(" "),a("p",[t._v("If you are sure that clients will connect to your NAT server from a static IP or subnet.\nIt would be better configure it to a firewall rule, so that bandwidth can be saved from transferring random packets in the network.")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://linux-training.be/networking/images/iptables_filter.png",alt:"1",loading:"lazy"}})]),t._v(" "),a("p",[t._v("Note the firewall for NAT goes to FORWARD instead of INPUT.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# New chain")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -N NAT_WHITE_LIST\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ACCEPT known IPs, DROP others")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A NAT_WHITE_LIST -d "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ALLOWED_DOMAINS")]),t._v(" -j ACCEPT\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A NAT_WHITE_LIST -j DROP\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable chain on FORWARD and NAT port ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A FORWARD -p tcp --dport "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),t._v(" -j NAT_WHITE_LIST\n")])])]),a("h2",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://linux-training.be/networking/ch14.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://linux-training.be/networking/ch14.html"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);