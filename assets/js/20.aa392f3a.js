(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{456:function(e,t,a){"use strict";a.r(t);var s=a(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Make Raspberry Pi 4 an access point -- and further a transparent proxy.")]),e._v(" "),a("h2",{attrs:{id:"setup-raspberry-pi-4-headlessly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-raspberry-pi-4-headlessly"}},[e._v("#")]),e._v(" Setup Raspberry Pi 4 headlessly")]),e._v(" "),a("p",[e._v('I bought a Raspberry Pi 4 recently.\nIn the first experience,\nI am a little surprised that Pi can not be easily setup in a headless way.\nProbably Pi 4 is so powerful that can speak "just use it as a PC",\nwhich might be the reason that documentations just tell you to connect a display, a keyboard and a mouse to set it up.')]),e._v(" "),a("p",[e._v("Anyway, I found a relatively easy way to setup Pi it by searching online.\nThe idea is to connect Pi to your wireless network in boot up.\nThe post "),a("a",{attrs:{href:"https://desertbot.io/blog/headless-raspberry-pi-4-ssh-wifi-setup",target:"_blank",rel:"noopener noreferrer"}},[e._v("headless-raspberry-pi-4-ssh-wifi-setup"),a("OutboundLink")],1),e._v(" gives instructions to write Wifi config to the OS image, then put the image on a SD-card and boot Pi from it.\nOnce boot up, hopefully Pi is automatically connected to Wifi and you can access it using "),a("code",[e._v("ssh")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v('Ensure the WLAN support "AP" mode by checking')]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ iw list\n")])])]),a("p",[e._v("Raspberry Pi 4 has it supported.")]),e._v(" "),a("p",[e._v("Install the following applications before you start, as you may lose internet connection in configuring your WLAN.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" instal hostapd "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For access point")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" instal dnsmasq "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For DHCP and DNS service")]),e._v("\n")])])]),a("h2",{attrs:{id:"choose-a-wlan-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#choose-a-wlan-interface"}},[e._v("#")]),e._v(" Choose a WLAN interface")]),e._v(" "),a("p",[e._v("To be an access point, Pi needs a wireless LAN interface to be connected to by clients, while itself also needs access to the network.")]),e._v(" "),a("ol",[a("li",[e._v("You can connect Pi to ethernet (Pi 4 has an ethernet port) and use Pi's builtin WLAN to be the access point.")]),e._v(" "),a("li",[e._v("You can connect Pi to wifi with the builtin WLAN and install another WLAN interface (e.g. a wifi dongle) to be the access point.")]),e._v(" "),a("li",[e._v("You can use one physical WLAN to both connect to a wifi as a client and act as the access point simultaneously. Check out "),a("a",{attrs:{href:"https://superuser.com/questions/155795/can-a-linux-machine-act-as-both-a-wireless-client-and-access-point-simultaneousl",target:"_blank",rel:"noopener noreferrer"}},[e._v("VAPs"),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"https://blog.thewalr.us/2017/09/26/raspberry-pi-zero-w-simultaneous-ap-and-managed-mode-wifi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simultaneously AP and managed Wifi"),a("OutboundLink")],1),e._v(", and "),a("a",{attrs:{href:"https://github.com/lukicdarkoo/rpi-wifi",target:"_blank",rel:"noopener noreferrer"}},[e._v("rpi-wifi"),a("OutboundLink")],1),e._v(", though it has some limitations and seems a bit more complicated to setup than other alternatives.")])]),e._v(" "),a("p",[e._v("I tried the second approach with a TL-WN726N external wireless card, but I can not find a Linux driver for it, so I failed to get it working (see "),a("a",{attrs:{href:"#Appendix"}},[e._v("Appendix")]),e._v(").\nThen I end up using the builtin WLAN on Pi as the access point.")]),e._v(" "),a("h2",{attrs:{id:"network-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network-mode"}},[e._v("#")]),e._v(" Network mode")]),e._v(" "),a("p",[e._v("Providing internet access in AP mode could be done using either "),a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/access-point-bridged.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bridge"),a("OutboundLink")],1),e._v(" or "),a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/access-point-routed.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("NAT"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("The following content is my step by step "),a("strong",[e._v("NAT")]),e._v(" setting up, I consider it a good complement to the official documentation linked above. I also extend my Pi to be a transparent proxy, which is pretty straight-forward once you get the AP working.")]),e._v(" "),a("h2",{attrs:{id:"release-wireless-interface-from-network-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#release-wireless-interface-from-network-manager"}},[e._v("#")]),e._v(" Release wireless interface from network manager")]),e._v(" "),a("p",[e._v("To set up an access point on the builtin WLAN, WLAN needs to be released from being used as a wireless client.\n"),a("code",[e._v("wpa_supplicant")]),e._v(" is the default network manager on raspberry Pi.\nIt is the one being used to in the post I linked to booting up Pi with a wireless connection.\nHere releasing WLAN from "),a("code",[e._v("wpa_supplicant")]),e._v(", which configures the WLAN to be the wireless client, and let an access point service manage it.")]),e._v(" "),a("p",[e._v("Add the following two lines to "),a("code",[e._v("/etc/dhcpcd.conf")]),e._v(",\n"),a("code",[e._v("dhcpcd")]),e._v(" is the default DHCP client on raspberry pi, the configuration change sets a static IP address to "),a("code",[e._v("wlan0")]),e._v(" and releases it from the network manager.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("interface wlan0\n    static "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ip_address")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".4.1/24\n    nohook wpa_supplicant "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Release from ..")]),e._v("\n")])])]),a("h2",{attrs:{id:"run-hostapd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-hostapd"}},[e._v("#")]),e._v(" Run hostapd")]),e._v(" "),a("p",[e._v("Next step, enable access point service on the WLAN.\n"),a("code",[e._v("hostapd")]),e._v(" is a daemon to run an access point service, which will be used to configure "),a("code",[e._v("wlan0")]),e._v(".\nAfter that your wireless network will be visible by client devices and "),a("code",[e._v("hostapd")]),e._v(" will manage\n- the credentials\n- the protocols\n- the encryption\n- ...")]),e._v(" "),a("p",[e._v("Refer to "),a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/software_access_point",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arch Software Access Point"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"https://wireless.wiki.kernel.org/en/users/documentation/hostapd",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linux Wireless Documentation"),a("OutboundLink")],1),e._v(" for configurations of "),a("code",[e._v("hostapd")]),e._v(".\nCheck the documentations and you will find there aren't many you need to change.\nConfigure the "),a("code",[e._v("interface")]),e._v(", "),a("code",[e._v("channel")]),e._v(", "),a("code",[e._v("ssid")]),e._v(", "),a("code",[e._v("wpa_passphrase")]),e._v(", "),a("code",[e._v("auth_algs")]),e._v(", "),a("code",[e._v("*_pairwise")]),e._v(", others can just be left as the defaults.")]),e._v(" "),a("p",[e._v("Make sure to check the most recent documents/posts to select the appropriate key exchange protocols through "),a("code",[e._v("*_pairwise")]),e._v(" to have the right security level desired.")]),e._v(" "),a("p",[e._v("Here is one example:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Operation mode (a = IEEE 802.11a (5 GHz), b = IEEE 802.11b (2.4 GHz)")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("hw_mode")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("g\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Channel number")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("channel")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Maximum number of stations allowed")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("max_num_sta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("macaddr_acl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ignore_broadcast_ssid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Bit field: 1=wpa, 2=wep, 3=both")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("auth_algs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Bit field: bit0 = WPA, bit1 = WPA2")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wpa")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set of accepted key management algorithms")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wpa_key_mgmt")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("WPA-PSK\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#rsn_pairwise=CCMP")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("wpa_pairwise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("CCMP\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])])]),a("p",[e._v("You may want to use the best quality "),a("code",[e._v("channel")]),e._v(" in your local area, which needs some steps to find out, as it is affected by ther wireless devices/routers around you as wel as the law in your country.\nIf you are using MacOS, you can scan the local network using "),a("a",{attrs:{href:"https://www.chriswrites.com/boosting-your-wi-fi-time-to-change-the-channel/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wireless Diagnostics"),a("OutboundLink")],1),e._v("\nOn Linux, try "),a("a",{attrs:{href:"https://linux.die.net/man/8/iwlist",target:"_blank",rel:"noopener noreferrer"}},[e._v("iwlist"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"dhcp-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dhcp-service"}},[e._v("#")]),e._v(" DHCP service")]),e._v(" "),a("p",[e._v("Set up DHCP services for IP ditribution to clients. Here doing it use "),a("code",[e._v("dnsmasq")]),e._v(".")]),e._v(" "),a("p",[e._v("Add following lines to change "),a("code",[e._v("/etc/dnsmasq.conf")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("interface")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("wlan0 "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Listening interface")]),e._v("\ndhcp-range"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("192.168")]),e._v(".4.2,192.168.4.5,255.255.255.0,24h\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Pool of IP addresses served via DHCP")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("domain")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("wlan     "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Local wireless DNS domain")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("address")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/gw.wlan/192.168.4.1\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Alias for this router")]),e._v("\n")])])]),a("p",[e._v("Note that the config only allows 4 IPs to be allocated, change the config if having more client devices.")]),e._v(" "),a("h2",{attrs:{id:"enable-packet-routing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enable-packet-routing"}},[e._v("#")]),e._v(" Enable packet routing")]),e._v(" "),a("p",[e._v("In order to get client devices access to internet, packet received at "),a("code",[e._v("wlan0")]),e._v(" need to be forwarded to "),a("code",[e._v("eth0")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("tee")]),e._v(" /proc/sys/net/ipv4/ip_forward\n")])])]),a("p",[e._v("For correctly routing (another word for IP forward), a masquerade rule is required to replace the "),a("code",[e._v("src")]),e._v("/"),a("code",[e._v("dst")]),e._v(" address in packets' IP frame head to the IP address of Pi, in both sending and receiving packets from "),a("code",[e._v("eth0")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n")])])]),a("h2",{attrs:{id:"transparent-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transparent-proxy"}},[e._v("#")]),e._v(" Transparent proxy")]),e._v(" "),a("p",[e._v("A transparent proxy is basically a proxy that runs inside the router, so that it is invisible (transparent) to the router client devices.\nShadowsocks's "),a("code",[e._v("ss-redir")]),e._v(" is a lightweight transparant proxy client that can be easily set up.\n"),a("code",[e._v("ss-redir")]),e._v(" listens at a local port and sends the traffic received on th local port to the shadowsocks server (through "),a("code",[e._v("eth0")]),e._v(").")]),e._v(" "),a("p",[e._v("Create firewall rules to route traffic received from "),a("code",[e._v("wlan0")]),e._v(" to the local port of "),a("code",[e._v("ss-redir")]),e._v(".\nRefer to "),a("a",{attrs:{href:"https://github.com/shadowsocks/shadowsocks-libev#transparent-proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("shadowsocks"),a("OutboundLink")],1),e._v(" for configurations.")]),e._v(" "),a("h2",{attrs:{id:"dns-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns-service"}},[e._v("#")]),e._v(" DNS service")]),e._v(" "),a("p",[e._v("On Linux, DNS is provided in some fixed C library which parses "),a("code",[e._v("resolv.conf")]),e._v(".\nHowever the configuration file "),a("code",[e._v("resolv.conf")]),e._v(" can be managed by a lot of applications.\nIn our case, "),a("code",[e._v("dnsmasq")]),e._v(" will be one of them and it is necessary for it to exclusively manage DNS resolving.\nCheck "),a("code",[e._v("/etc/resolv.conf")]),e._v(", ensure "),a("code",[e._v("nameserver")]),e._v(" is set to "),a("code",[e._v("127.0.0.1")]),e._v(", so that all the DNS query will be handled by "),a("code",[e._v("dnsmasq")]),e._v(".")]),e._v(" "),a("p",[e._v("Run "),a("code",[e._v("dig")]),e._v(" on one of the client devices to verify that DNS is working properly.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" dnsutils\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("dig")]),e._v(" www.google.com\n")])])]),a("p",[e._v("You might also want to set a DNS proxy using "),a("code",[e._v("ss-tunnel")]),e._v(", if so "),a("code",[e._v("dig")]),e._v(" with custom host and port.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("dig")]),e._v(" @127.0.0.1 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1086")]),e._v(" www.google.com "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Replace 1086 with your local `ss-tunnel` port.")]),e._v("\n")])])]),a("p",[e._v("If the DNS proxy is not working, the top common reasons might be")]),e._v(" "),a("ol",[a("li",[e._v("UDP relay is not enabled on your shadowsocks server (missing the "),a("code",[e._v("-u")]),e._v(" argument)")]),e._v(" "),a("li",[e._v("UDP traffic is blocked by your VPS provider, check the firewall rules of your VPS.")])]),e._v(" "),a("h2",{attrs:{id:"reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[e._v("#")]),e._v(" Reference")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://wiki.archlinux.org/index.php/software_access_point",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.archlinux.org/index.php/software_access_point"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://wireless.wiki.kernel.org/en/users/documentation/hostapd",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wireless.wiki.kernel.org/en/users/documentation/hostapd"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://thepi.io/how-to-use-your-raspberry-pi-as-a-wireless-access-point",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://thepi.io/how-to-use-your-raspberry-pi-as-a-wireless-access-point/"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://unix.stackexchange.com/questions/14056/what-is-kernel-ip-forwarding",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://unix.stackexchange.com/questions/14056/what-is-kernel-ip-forwarding"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/access-point-routed.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.raspberrypi.org/documentation/configuration/wireless/access-point-routed.md"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/access-point-bridged.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.raspberrypi.org/documentation/configuration/wireless/access-point-bridged.md"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://hbprotoss.github.io/post/da-jian-zhi-neng-fan-qiang-lu-you-qi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://hbprotoss.github.io/post/da-jian-zhi-neng-fan-qiang-lu-you-qi/"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://unix.stackexchange.com/questions/494324/how-to-setup-dns-manually-on-linux",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://unix.stackexchange.com/questions/494324/how-to-setup-dns-manually-on-linux"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"appendix-install-driver-for-a-wifi-dongle-tl-wn726n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#appendix-install-driver-for-a-wifi-dongle-tl-wn726n"}},[e._v("#")]),e._v(" Appendix: Install driver for a wifi dongle (TL-WN726N)")]),e._v(" "),a("p",[e._v("I have tried to make the access point using a wifi dongle.")]),e._v(" "),a("p",[e._v("I got a wifi dongle from TP-Link, the TL-WN726N.\nHowever, I failed to get it to work on Raspberry Pi because there is no available linux driver for it.")]),e._v(" "),a("p",[e._v("I almost get the end of configuring the dongle, and the steps are listed below.")]),e._v(" "),a("ol",[a("li",[e._v("Insert wifi dongle and show usb device information.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ lsusb\n")])])]),a("p",[e._v("For example, the device from 'Realtek Semiconductor Corp' is my wifi dongle.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 003: ID 0bda:1a2b Realtek Semiconductor Corp.\nBus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Check kernel log")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("dmesg")]),e._v("\n")])])]),a("p",[e._v("Dongle recoginized, though as a usb storage device (see below).")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[159348.249956] usb 1-1.3: new high-speed USB device number 67 using xhci_hcd\n[159348.380395] usb 1-1.3: New USB device found, idVendor=0bda, idProduct=1a2b, bcdDevice= 2.00\n[159348.380410] usb 1-1.3: New USB device strings: Mfr=1, Product=2, SerialNumber=0\n[159348.380423] usb 1-1.3: Product: DISK\n[159348.380435] usb 1-1.3: Manufacturer: Realtek\n[159348.384264] usb-storage 1-1.3:1.0: USB Mass Storage device detected\n[159348.384669] scsi host0: usb-storage 1-1.3:1.0\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("If the driver is onboard in the dongle, it may first get recognized as an usb storage device.\nIn that case, you need to manually switch its usb mode with "),a("a",{attrs:{href:"https://linux.die.net/man/1/usb_modeswitch",target:"_blank",rel:"noopener noreferrer"}},[e._v("usb_modeswitch"),a("OutboundLink")],1)])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" usb_modeswitch -KW -v 0bda -p 1a2b\n")])])]),a("p",[e._v("Once done switching, check usb device information again.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ lsusb\n")])])]),a("p",[e._v("Note that the product ID changes from "),a("code",[e._v("1a2b")]),e._v(" to "),a("code",[e._v("b711")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub\nBus 001 Device 066: ID 0bda:b711 Realtek Semiconductor Corp.\nBus 001 Device 002: ID 2109:3431 VIA Labs, Inc. Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[e._v("For dongle bought online, most likely it missing its Linux driver. Then you may try to find one on the internet.\nAccording to "),a("a",{attrs:{href:"https://devicehunt.com/view/type/usb/vendor/0BDA/device/B711",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://devicehunt.com/view/type/usb/vendor/0BDA/device/B711"),a("OutboundLink")],1),e._v(", the device "),a("code",[e._v("0bda:b711")]),e._v(" is RTL8188GU 802.11n WLAN Adapter (After Modeswitch)")])]),e._v(" "),a("p",[e._v("I looked up for driver for "),a("code",[e._v("RTL8188GU")]),e._v(" online, the closest one I found is "),a("a",{attrs:{href:"https://github.com/lwfinger/rtl8188gu",target:"_blank",rel:"noopener noreferrer"}},[e._v("lwfinger/rtl8188gu"),a("OutboundLink")],1),e._v(".\nThough it has the name "),a("code",[e._v("rtl8188gu")]),e._v(", the author mentioned  in the issues (and (I can also tell it from kernel log) that this merely a modification of "),a("code",[e._v("rtl8710bu")]),e._v(" that he thinks might work on "),a("code",[e._v("rtl8188gu")]),e._v(".")]),e._v(" "),a("p",[e._v("Looking at the "),a("a",{attrs:{href:"https://github.com/lwfinger/rtl8188gu/issues/2",target:"_blank",rel:"noopener noreferrer"}},[e._v("issues"),a("OutboundLink")],1),e._v(", several people tried this driver but all failed and reached the conclusion that there is no public available linux driver for "),a("code",[e._v("rtl8188gu")]),e._v(" for now.")]),e._v(" "),a("p",[e._v("I tried to compile and install it anyway, to my Raspberry Pi, but it is not working as expected.")]),e._v(" "),a("p",[e._v("For driver compiling, kernel headers is necessary.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" raspberrypi-kernel-headers\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/lwfinger/rtl8188gu "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" rtl8188gu "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("arm "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" all "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" -\n")])])]),a("p",[e._v("The compilation is good and the driver recognizes my device as a WLAN, but it fails on verifying some checksums.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("dmesg")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.292802")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: Clear the 0x40000138"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" to prevent CM4 Suspend"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" 0x40000138 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" 0x0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.293161")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: rtl8710b_FirmwareDownload fw: FW_NIC, size: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23750")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.293167")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: rtl8710b_FirmwareDownload: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("fw_ver")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("fw_subver")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("0000 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("sig")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("0x10b1, "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Month")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("09, "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Date")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("15")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Hour")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("14")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Minute")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.293210")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: rtl8710b_FirmwareDownload by IO write"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.563646")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: polling_fwdl_chksum: Checksum report OK"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(", 0ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(", REG_MCUFWDL:0x01050105\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.563651")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: rtl8710b_FirmwareDownload: download FW count:1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.760545")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" ***** value_to_check 0x82, value_expected 0xc6\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.760552")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: _FWFreeToGo: Polling FW ready Fail"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4319")]),e._v(", 200ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(", REG_MCUFWDL:0x01050182\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.760639")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: DUMP REG "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("0x90")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("0x1000101\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("137684.760643")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" RTW: ERROR Dump FW page 0x1000 ~ 0x10FF :0\n")])])]),a("p",[e._v("I stuck here.")]),e._v(" "),a("h2",{attrs:{id:"ap-and-client-mode-simultaneously"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ap-and-client-mode-simultaneously"}},[e._v("#")]),e._v(" AP and Client mode simultaneously")]),e._v(" "),a("p",[e._v("TODO: "),a("a",{attrs:{href:"https://blog.thewalr.us/2017/09/26/raspberry-pi-zero-w-simultaneous-ap-and-managed-mode-wifi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.thewalr.us/2017/09/26/raspberry-pi-zero-w-simultaneous-ap-and-managed-mode-wifi/"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);