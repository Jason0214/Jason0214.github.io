(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{449:function(t,e,s){"use strict";s.r(e);var a=s(43),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("I have a proxy server that works well, but recently I was quite suffering from the bad networking (very high latency and packet loss) accessing my server.\nI have managed to setup another closeby server to do a NAT transfer, which (at least parially) solved the issue.")]),t._v(" "),s("h2",{attrs:{id:"nat-through-iptables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nat-through-iptables"}},[t._v("#")]),t._v(" NAT through iptables")]),t._v(" "),s("p",[s("code",[t._v("iptables")]),t._v(" is quite handy to use to setup a NAT.\nSet up a TCP NAT only takes two rules, while a UDP one may be more complex.\nHere is a TCP exmaple:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -t nat -A PREROUTING -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -j DNAT --to-destination "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_IP")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -t nat -A POSTROUTING -p tcp -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_IP")]),t._v(" --dport "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -j SNAT --to-source "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCAL_PRIVATE_IP")]),t._v("\n")])])]),s("p",[t._v("Make the your request send to NAT server set the "),s("code",[t._v("dst port")]),t._v(" to the listening port of your destination server.\nThese two rules does not change the "),s("code",[t._v("dst port")]),t._v(".")]),t._v(" "),s("p",[t._v("Also remember to tamper the source IP of the packets.\nSet it to the NAT server's private IP instead of its public IP.\nIt could be very common that your rented NAT server is running behind another NAT.")]),t._v(" "),s("h2",{attrs:{id:"verify-nat-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verify-nat-works"}},[t._v("#")]),t._v(" Verify NAT works")]),t._v(" "),s("p",[t._v("Running "),s("code",[t._v("tcptrack")]),t._v(" on your NAT server to check the traffic")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" tcptrack -i eth0\n")])])]),s("p",[t._v("If the setting is good, you will see two ESTABLISHED connectionss for every incoming TCP connection (exactly a NAT will do).")]),t._v(" "),s("h2",{attrs:{id:"add-firewall-rule-to-allow-only-specific-ips"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-firewall-rule-to-allow-only-specific-ips"}},[t._v("#")]),t._v(" Add firewall rule to allow only specific IPs")]),t._v(" "),s("p",[t._v("If you are sure that clients will connect to your NAT server from a static IP or subnet.\nYou'd better configure it as a fireware rule, so that bandwidth can be saved from transfering random packets in the network.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# New chain")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -N NAT_WHITE_LIST\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ACCEPT known IPs, DROP others")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A NAT_WHITE_LIST -d "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ALLOWED_DOMAINS")]),t._v(" -j ACCEPT\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A NAT_WHITE_LIST -j DROP\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable chain on INPUT and NAT port ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" iptables -A INPUT -p tcp --dport "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DST_SERVER_PORT")]),t._v(" -j NAT_WHITE_LIST\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);